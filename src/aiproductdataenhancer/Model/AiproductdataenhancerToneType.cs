/*
 * aiproductdataenhancer/service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = aiproductdataenhancer.Client.OpenAPIDateConverter;

namespace aiproductdataenhancer.Model
{
    /// <summary>
    /// Defines aiproductdataenhancerToneType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AiproductdataenhancerToneType
    {
        /// <summary>
        /// Enum UNKNOWN for value: TONE_TYPE_UNKNOWN
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_UNKNOWN")]
        UNKNOWN = 1,

        /// <summary>
        /// Enum FORMAL for value: TONE_TYPE_FORMAL
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_FORMAL")]
        FORMAL = 2,

        /// <summary>
        /// Enum CASUAL for value: TONE_TYPE_CASUAL
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_CASUAL")]
        CASUAL = 3,

        /// <summary>
        /// Enum PERSUASIVE for value: TONE_TYPE_PERSUASIVE
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_PERSUASIVE")]
        PERSUASIVE = 4,

        /// <summary>
        /// Enum INFORMATIVE for value: TONE_TYPE_INFORMATIVE
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_INFORMATIVE")]
        INFORMATIVE = 5,

        /// <summary>
        /// Enum INSPIRATIONAL for value: TONE_TYPE_INSPIRATIONAL
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_INSPIRATIONAL")]
        INSPIRATIONAL = 6,

        /// <summary>
        /// Enum AUTHORITATIVE for value: TONE_TYPE_AUTHORITATIVE
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_AUTHORITATIVE")]
        AUTHORITATIVE = 7,

        /// <summary>
        /// Enum PLAYFUL for value: TONE_TYPE_PLAYFUL
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_PLAYFUL")]
        PLAYFUL = 8,

        /// <summary>
        /// Enum EMPATHETIC for value: TONE_TYPE_EMPATHETIC
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_EMPATHETIC")]
        EMPATHETIC = 9,

        /// <summary>
        /// Enum SALESORIENTED for value: TONE_TYPE_SALES_ORIENTED
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_SALES_ORIENTED")]
        SALESORIENTED = 10,

        /// <summary>
        /// Enum TECHNICAL for value: TONE_TYPE_TECHNICAL
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_TECHNICAL")]
        TECHNICAL = 11,

        /// <summary>
        /// Enum SOPHISTICATED for value: TONE_TYPE_SOPHISTICATED
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_SOPHISTICATED")]
        SOPHISTICATED = 12,

        /// <summary>
        /// Enum URGENT for value: TONE_TYPE_URGENT
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_URGENT")]
        URGENT = 13,

        /// <summary>
        /// Enum FRIENDLY for value: TONE_TYPE_FRIENDLY
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_FRIENDLY")]
        FRIENDLY = 14,

        /// <summary>
        /// Enum PROFESSIONAL for value: TONE_TYPE_PROFESSIONAL
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_PROFESSIONAL")]
        PROFESSIONAL = 15,

        /// <summary>
        /// Enum HUMOROUS for value: TONE_TYPE_HUMOROUS
        /// </summary>
        [EnumMember(Value = "TONE_TYPE_HUMOROUS")]
        HUMOROUS = 16
    }

}
